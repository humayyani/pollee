{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/robertheler/Desktop/Hack Reactor/pollee/components/PollFilter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Poll from \"./Poll.js\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport PTRView from \"react-native-pull-to-refresh\";\n\nvar PollFilter = function (_Component) {\n  _inherits(PollFilter, _Component);\n\n  var _super = _createSuper(PollFilter);\n\n  function PollFilter(props) {\n    var _this;\n\n    _classCallCheck(this, PollFilter);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      polls: [],\n      justVoted: [],\n      justLiked: [],\n      lastVoted: null\n    };\n    _this.hardRefresh = _this.hardRefresh.bind(_assertThisInitialized(_this));\n    _this.handleVote = _this.handleVote.bind(_assertThisInitialized(_this));\n    _this.handleLike = _this.handleLike.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PollFilter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchPollsForUser(this.props.route.userData.id).then(function (polls) {\n        _this2.setState({\n          polls: polls\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"fetchPollsForUser\",\n    value: function fetchPollsForUser(id) {\n      return fetch(\"http://3.221.234.184:3001/api/feed/\" + id).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return json;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"handleVote\",\n    value: function handleVote(idOfJustVotedPoll) {\n      var _this3 = this;\n\n      this.fetchPollsForUser(this.props.route.userData.id).then(function (polls) {\n        _this3.state.justVoted.push(idOfJustVotedPoll);\n\n        _this3.setState({\n          polls: polls,\n          lastVoted: idOfJustVotedPoll\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"handleLike\",\n    value: function handleLike(idOfJustLikedPoll) {\n      var _this4 = this;\n\n      this.fetchPollsForUser(this.props.route.userData.id).then(function (polls) {\n        _this4.state.justLiked.push(idOfJustLikedPoll);\n\n        _this4.setState({\n          polls: polls,\n          lastVoted: null\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"hardRefresh\",\n    value: function hardRefresh() {\n      var _this5 = this;\n\n      this.fetchPollsForUser(this.props.route.userData.id).then(function (polls) {\n        _this5.setState({\n          polls: polls,\n          justVoted: [],\n          lastVoted: null\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      if (this.state.polls && this.state.justVoted) {\n        return React.createElement(PTRView, {\n          onRefresh: this.hardRefresh,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }\n        }, React.createElement(ScrollView, {\n          style: {\n            backgroundColor: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, this.state.polls.map(function (poll, i) {\n          var alreadyVoted = false;\n\n          if (poll.voters) {\n            for (var _i = 0; _i < poll.voters.length; _i++) {\n              if (poll.voters[_i] === _this6.props.route.userData.id) {\n                alreadyVoted = true;\n                break;\n              }\n            }\n          }\n\n          var byUser = _this6.props.route.userData.id === poll.by;\n          var shouldAnimate = true;\n          var justLiked = false;\n\n          for (var _i2 = 0; _i2 < _this6.state.justVoted.length; _i2++) {\n            if (_this6.state.justLiked[_i2] === poll.id) {\n              justLiked = true;\n              shouldAnimate = false;\n              break;\n            }\n          }\n\n          var justVoted = false;\n\n          for (var _i3 = 0; _i3 < _this6.state.justVoted.length; _i3++) {\n            if (_this6.state.justVoted[_i3] === poll.id) {\n              justVoted = true;\n              shouldAnimate = false;\n              break;\n            }\n          }\n\n          if (poll.id === _this6.state.lastVoted) {\n            shouldAnimate = true;\n          }\n\n          if (alreadyVoted && !justVoted) {\n            shouldAnimate = false;\n          }\n\n          if (_this6.props.showSelf == byUser && _this6.props.showAlreadyVoted == alreadyVoted && _this6.props.showRejected == false || justVoted) {\n            return React.createElement(Poll, {\n              key: i,\n              poll: poll,\n              voter: _this6.props.route.userData.id,\n              handleVote: _this6.handleVote,\n              handleLike: _this6.handleLike,\n              handleComment: _this6.handleLike,\n              animate: shouldAnimate,\n              alreadyVoted: alreadyVoted,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }\n            });\n          } else return React.createElement(View, {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 31\n            }\n          });\n        }))));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return PollFilter;\n}(Component);\n\nexport { PollFilter as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginVertical: 15\n  }\n});","map":{"version":3,"sources":["/Users/robertheler/Desktop/Hack Reactor/pollee/components/PollFilter.js"],"names":["React","Component","Poll","ScrollView","PTRView","PollFilter","props","state","polls","justVoted","justLiked","lastVoted","hardRefresh","bind","handleVote","handleLike","fetchPollsForUser","route","userData","id","then","setState","catch","error","console","log","fetch","response","json","idOfJustVotedPoll","push","idOfJustLikedPoll","backgroundColor","styles","container","map","poll","i","alreadyVoted","voters","length","byUser","by","shouldAnimate","showSelf","showAlreadyVoted","showRejected","StyleSheet","create","flex","alignItems","marginVertical"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Poll from \"./Poll.js\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport PTRView from \"react-native-pull-to-refresh\";\n\nexport default class PollFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      polls: [],\n      justVoted: [],\n      justLiked: [], // continue to render these during these seshion\n      lastVoted: null // the very last poll (only one that should be animated in this seshion)\n    };\n    this.hardRefresh = this.hardRefresh.bind(this);\n    this.handleVote = this.handleVote.bind(this);\n    this.handleLike = this.handleLike.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchPollsForUser(this.props.route.userData.id)\n      .then(polls => {\n        this.setState({ polls });\n      })\n      .catch(error => console.log(error));\n  }\n\n  fetchPollsForUser(id) {\n    return fetch(`http://3.221.234.184:3001/api/feed/${id}`) //returns all polls ATM\n      .then(response => response.json())\n      .then(json => {\n        return json;\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  handleVote(idOfJustVotedPoll) {\n    this.fetchPollsForUser(this.props.route.userData.id)\n      .then(polls => {\n        this.state.justVoted.push(idOfJustVotedPoll);\n\n        this.setState({\n          polls: polls,\n          lastVoted: idOfJustVotedPoll\n        }); //continue to render these inspite of being voted\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleLike(idOfJustLikedPoll) {\n    this.fetchPollsForUser(this.props.route.userData.id)\n      .then(polls => {\n        this.state.justLiked.push(idOfJustLikedPoll);\n\n        this.setState({\n          polls: polls,\n          lastVoted: null\n        }); //continue to render these inspite of being voted\n      })\n      .catch(error => console.log(error));\n  }\n\n  hardRefresh() {\n    this.fetchPollsForUser(this.props.route.userData.id)\n      .then(polls => {\n        this.setState({\n          polls: polls,\n          justVoted: [],\n          lastVoted: null\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    if (this.state.polls && this.state.justVoted) {\n      return (\n        <PTRView onRefresh={this.hardRefresh}>\n          <ScrollView style={{ backgroundColor: \"white\" }}>\n            <View style={styles.container}>\n              {this.state.polls.map((poll, i) => {\n                let alreadyVoted = false;\n                if (poll.voters) {\n                  for (let i = 0; i < poll.voters.length; i++) {\n                    if (poll.voters[i] === this.props.route.userData.id) {\n                      alreadyVoted = true;\n                      break;\n                    }\n                  }\n                }\n                let byUser = this.props.route.userData.id === poll.by;\n\n                let shouldAnimate = true;\n                let justLiked = false; //this.state.justVoted.includes(poll.id)\n                for (let i = 0; i < this.state.justVoted.length; i++) {\n                  if (this.state.justLiked[i] === poll.id) {\n                    justLiked = true;\n                    shouldAnimate = false;\n                    break;\n                  }\n                }\n\n                let justVoted = false; //this.state.justVoted.includes(poll.id)\n                for (let i = 0; i < this.state.justVoted.length; i++) {\n                  if (this.state.justVoted[i] === poll.id) {\n                    justVoted = true;\n                    shouldAnimate = false;\n                    break;\n                  }\n                }\n\n                // && !justLiked\n                if (poll.id === this.state.lastVoted) {\n                  shouldAnimate = true;\n                }\n                if (alreadyVoted && !justVoted) {\n                  shouldAnimate = false;\n                }\n\n                //shouldAnimate = true\n                if (\n                  (this.props.showSelf == byUser &&\n                    this.props.showAlreadyVoted == alreadyVoted &&\n                    this.props.showRejected == false) ||\n                  justVoted\n                ) {\n                  return (\n                    <Poll\n                      key={i}\n                      poll={poll}\n                      voter={this.props.route.userData.id}\n                      handleVote={this.handleVote}\n                      handleLike={this.handleLike}\n                      handleComment={this.handleLike}\n                      animate={shouldAnimate}\n                      alreadyVoted={alreadyVoted}\n                    />\n                  );\n                } else return <View key={i}></View>;\n              })}\n            </View>\n          </ScrollView>\n        </PTRView>\n      );\n    } else {\n      return <View style={styles.container}></View>;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginVertical: 15\n  }\n});\n"]},"metadata":{},"sourceType":"module"}