{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/robertheler/Desktop/Hack Reactor/pollee/components/screens/Discover.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Component, Fragment } from \"react\";\nimport { Container, Header, Content, Button, Form, Item, Input, Thumbnail, Textarea, Label } from \"native-base\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Post = function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post(_ref) {\n    var _this;\n\n    var route = _ref.route,\n        navigation = _ref.navigation;\n\n    _classCallCheck(this, Post);\n\n    _this = _super.call(this);\n    _this.state = {\n      user: route.params.route.userData,\n      poll: {},\n      question: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\"\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      if (this.state.question === \"\" || this.state.answer1 === \"\" || this.state.answer2 === \"\") {\n        alert(\"Please fill out the question and at least 2 answers!\");\n      } else {\n        var poll = {\n          by: this.state.user.id,\n          question: this.state.question,\n          answers: [this.state.answer1, this.state.answer2]\n        };\n\n        if (this.state.answer3 !== \"\") {\n          poll.answers.push(this.state.answer3);\n        }\n\n        if (this.state.answer4 !== \"\") {\n          poll.answers.push(this.state.answer4);\n        }\n\n        this.postPoll(poll);\n      }\n    }\n  }, {\n    key: \"postPoll\",\n    value: function postPoll(poll) {\n      var _this2 = this;\n\n      fetch(\"http://3.221.234.184:3001/api/polls\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"post\",\n        body: JSON.stringify(poll)\n      }).then(function (response) {\n        return _this2.setState({\n          question: \"\",\n          answer1: \"\",\n          answer2: \"\",\n          answer3: \"\",\n          answer4: \"\"\n        }, alert(\"Poll was submitted! Check the feed to see responses!\"));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, React.createElement(Content, {\n        contentContainerStyle: styles.contentContainerOuter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, React.createElement(Content, {\n        contentContainerStyle: styles.contentContainerInner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, this.state.user ? React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: 40,\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContet: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, React.createElement(Thumbnail, {\n        source: {\n          uri: \"\" + this.state.user.picture.data.url\n        },\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 15,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"#202020\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"\" + this.state.user.name))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Type your poll here (e.g. Am I pretty?)\",\n        placeholderTextColor: \"gray\",\n        value: this.state.question,\n        style: styles.question,\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            question: val\n          });\n        },\n        id: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Answer 1\",\n        placeholderTextColor: \"#E9E9E9\",\n        value: this.state.answer1,\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer1: val\n          });\n        },\n        id: \"answer1\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Answer 2\",\n        placeholderTextColor: \"#E9E9E9\",\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        value: this.state.answer2,\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer2: val\n          });\n        },\n        id: \"answer2\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Answer 3 (optional)\",\n        placeholderTextColor: \"#E9E9E9\",\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        value: this.state.answer3,\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer3: val\n          });\n        },\n        id: \"answer3\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Answer 4 (optional)\",\n        placeholderTextColor: \"#E9E9E9\",\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        val: this.state.answer4,\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer4: val\n          });\n        },\n        id: \"answer4\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          alignSelf: \"center\",\n          color: \"#202020\"\n        },\n        onPress: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, \"Submit Poll\")), React.createElement(Text, {\n        style: {\n          marginBottom: 5,\n          marginHorizontal: 10,\n          textAlign: \"left\",\n          fontStyle: \"italic\",\n          fontSize: 12,\n          alignSelf: \"flex-start\",\n          color: \"gray\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, \"Note: The poll will be visible to all your Facebook friends!\")))));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport { Post as default };\nvar styles = StyleSheet.create({\n  contentContainerOuter: {\n    justifyContent: \"center\"\n  },\n  contentContainerInner: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5\n  },\n  outter: {\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    width: \"100%\",\n    paddingVertical: 10,\n    paddingHorizontal: 0,\n    margin: 3,\n    alignSelf: \"center\"\n  },\n  container: {\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    marginVertical: 100,\n    paddingVertical: 10,\n    marginHorizontal: 20,\n    shadowColor: \"#d9d9d9\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 30\n  },\n  question: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"#202020\",\n    marginBottom: 20,\n    borderBottomWidth: 1,\n    borderColor: \"#E9E9E9\",\n    padding: 0\n  },\n  answer: {\n    fontSize: 15,\n    color: \"#202020\",\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    height: 40,\n    width: \"100%\",\n    alignSelf: \"center\",\n    marginVertical: 3\n  },\n  button: {\n    borderRadius: 25,\n    height: 50,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    margin: 40,\n    alignSelf: \"center\",\n    backgroundColor: \"#FDDE4E\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/robertheler/Desktop/Hack Reactor/pollee/components/screens/Discover.js"],"names":["React","useState","Component","Fragment","Container","Header","Content","Button","Form","Item","Input","Thumbnail","Textarea","Label","ScrollView","Post","route","navigation","state","user","params","userData","poll","question","answer1","answer2","answer3","answer4","onSubmit","bind","alert","by","id","answers","push","postPoll","fetch","headers","Accept","method","body","JSON","stringify","then","response","setState","catch","error","console","log","styles","contentContainerOuter","container","contentContainerInner","flex","flexDirection","justifyContent","alignItems","height","marginBottom","justifyContet","uri","picture","data","url","width","borderRadius","marginRight","color","name","ref","SearchInput","val","answer","button","fontSize","alignSelf","marginHorizontal","textAlign","fontStyle","StyleSheet","create","paddingHorizontal","outter","borderWidth","borderColor","paddingVertical","margin","backgroundColor","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontWeight","borderBottomWidth","padding"],"mappings":"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","sourcesContent":["import React, { useState, Component, Fragment } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  Button,\n  Form,\n  Item,\n  Input,\n  Thumbnail,\n  Textarea,\n  Label\n} from \"native-base\";\n\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\n\nexport default class Post extends Component {\n  constructor({ route, navigation }) {\n    super();\n    this.state = {\n      user: route.params.route.userData,\n      poll: {},\n      question: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\"\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    if (\n      this.state.question === \"\" ||\n      this.state.answer1 === \"\" ||\n      this.state.answer2 === \"\"\n    ) {\n      // Works on both Android and iOS\n      alert(\"Please fill out the question and at least 2 answers!\");\n    } else {\n      let poll = {\n        by: this.state.user.id,\n        question: this.state.question,\n        answers: [this.state.answer1, this.state.answer2]\n      };\n      if (this.state.answer3 !== \"\") {\n        poll.answers.push(this.state.answer3);\n      }\n      if (this.state.answer4 !== \"\") {\n        poll.answers.push(this.state.answer4);\n      }\n      this.postPoll(poll);\n    }\n  }\n\n  postPoll(poll) {\n    fetch(\"http://3.221.234.184:3001/api/polls\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(poll)\n    })\n      .then(response =>\n        //alert('Poll was submitted! Check the feed to see responses!')\n        this.setState(\n          {\n            question: \"\",\n            answer1: \"\",\n            answer2: \"\",\n            answer3: \"\",\n            answer4: \"\"\n          },\n          alert(\"Poll was submitted! Check the feed to see responses!\")\n        )\n      )\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <ScrollView>\n        <Content contentContainerStyle={styles.contentContainerOuter}>\n          <View style={styles.container}>\n            <Content contentContainerStyle={styles.contentContainerInner}>\n              {this.state.user ? (\n                <View\n                  style={{\n                    flex: 1,\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: 40,\n                    marginBottom: 0\n                  }}\n                >\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"row\",\n                      justifyContet: \"center\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    <Thumbnail\n                      source={{ uri: `${this.state.user.picture.data.url}` }}\n                      style={{\n                        width: 30,\n                        height: 30,\n                        borderRadius: 15,\n                        marginRight: 10\n                      }}\n                    />\n                    <Text\n                      style={{ color: \"#202020\" }}\n                    >{`${this.state.user.name}`}</Text>\n                  </View>\n                </View>\n              ) : (\n                <View></View>\n              )}\n              <Form>\n                <Input\n                  placeholder=\"Type your poll here (e.g. Am I pretty?)\"\n                  placeholderTextColor=\"gray\"\n                  value={this.state.question}\n                  style={styles.question}\n                  getRef={ref => {\n                    this.SearchInput = ref;\n                  }}\n                  onChangeText={val => this.setState({ question: val })}\n                  id=\"question\"\n                />\n\n                <Input\n                  placeholder=\"Answer 1\"\n                  placeholderTextColor=\"#E9E9E9\"\n                  value={this.state.answer1}\n                  getRef={ref => {\n                    this.SearchInput = ref;\n                  }}\n                  onChangeText={val => this.setState({ answer1: val })}\n                  id=\"answer1\"\n                  style={styles.answer}\n                />\n\n                <Input\n                  placeholder=\"Answer 2\"\n                  placeholderTextColor=\"#E9E9E9\"\n                  getRef={ref => {\n                    this.SearchInput = ref;\n                  }}\n                  value={this.state.answer2}\n                  onChangeText={val => this.setState({ answer2: val })}\n                  id=\"answer2\"\n                  style={styles.answer}\n                />\n\n                <Input\n                  placeholder=\"Answer 3 (optional)\"\n                  placeholderTextColor=\"#E9E9E9\"\n                  getRef={ref => {\n                    this.SearchInput = ref;\n                  }}\n                  value={this.state.answer3}\n                  onChangeText={val => this.setState({ answer3: val })}\n                  id=\"answer3\"\n                  style={styles.answer}\n                />\n\n                <Input\n                  placeholder=\"Answer 4 (optional)\"\n                  placeholderTextColor=\"#E9E9E9\"\n                  getRef={ref => {\n                    this.SearchInput = ref;\n                  }}\n                  val={this.state.answer4}\n                  onChangeText={val => this.setState({ answer4: val })}\n                  id=\"answer4\"\n                  style={styles.answer}\n                />\n              </Form>\n\n              <TouchableOpacity style={styles.button}>\n                <Text\n                  style={{\n                    fontSize: 15,\n                    alignSelf: \"center\",\n                    color: \"#202020\"\n                  }}\n                  onPress={this.onSubmit}\n                >\n                  Submit Poll\n                </Text>\n              </TouchableOpacity>\n              <Text\n                style={{\n                  marginBottom: 5,\n                  marginHorizontal: 10,\n                  textAlign: \"left\",\n                  fontStyle: \"italic\",\n                  fontSize: 12,\n                  alignSelf: \"flex-start\",\n                  color: \"gray\"\n                }}\n              >\n                {`Note: The poll will be visible to all your Facebook friends!`}\n              </Text>\n            </Content>\n          </View>\n        </Content>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  contentContainerOuter: {\n    justifyContent: \"center\"\n  },\n  contentContainerInner: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5\n  },\n  outter: {\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    width: \"100%\",\n    paddingVertical: 10,\n    paddingHorizontal: 0,\n    margin: 3,\n    alignSelf: \"center\"\n  },\n  container: {\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    marginVertical: 100,\n    paddingVertical: 10,\n    marginHorizontal: 20,\n    shadowColor: \"#d9d9d9\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 30\n  },\n  question: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"#202020\",\n    marginBottom: 20,\n    borderBottomWidth: 1,\n    borderColor: \"#E9E9E9\",\n    padding: 0\n  },\n  answer: {\n    fontSize: 15,\n    color: \"#202020\",\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    height: 40,\n    width: \"100%\",\n    alignSelf: \"center\",\n    marginVertical: 3\n  },\n  button: {\n    borderRadius: 25,\n    height: 50,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    margin: 40,\n    alignSelf: \"center\",\n    backgroundColor: \"#FDDE4E\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}