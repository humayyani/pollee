{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/robertheler/Desktop/Hack Reactor/pollee/components/Poll.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Thumbnail } from \"native-base\";\nimport Choice from \"./Choice.js\";\nimport moment from \"moment\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nmoment().format();\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Stat from \"./Stat\";\nimport SlidingPanel from \"react-native-sliding-up-down-panels\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar You = function (_Component) {\n  _inherits(You, _Component);\n\n  var _super = _createSuper(You);\n\n  function You(props) {\n    var _this;\n\n    _classCallCheck(this, You);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      user: undefined,\n      initialOpacity: new Animated.Value(0)\n    };\n    _this.handleVote = _this.handleVote.bind(_assertThisInitialized(_this));\n    _this.like = _this.like.bind(_assertThisInitialized(_this));\n    _this.comment = _this.comment.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(You, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.grabUserInfo(this.props.poll.by).then(function (user) {\n        _this2.setState({\n          user: user\n        });\n      });\n    }\n  }, {\n    key: \"grabUserInfo\",\n    value: function grabUserInfo(id) {\n      return fetch(\"http://3.221.234.184:3001/api/users/\" + id).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return json[0];\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"comment\",\n    value: function comment(_comment) {\n      var id = this.props.poll.id;\n      var commenter = this.props.voter;\n      var handleComment = this.props.handleComment;\n      fetch(\"http://3.221.234.184:3001/api/comment/\" + id + \"/\" + commenter, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"patch\",\n        body: JSON.stringify({\n          comment: _comment\n        })\n      }).then(function (response) {\n        handleComment(id);\n      }).catch(function (error) {\n        console.error(\"Error:\", error);\n      });\n    }\n  }, {\n    key: \"like\",\n    value: function like() {\n      var id = this.props.poll.id;\n      var voter = this.props.voter;\n      var handleLike = this.props.handleLike;\n      fetch(\"http://3.221.234.184:3001/api/likepoll/\" + id + \"/\" + voter, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"patch\"\n      }).then(function (response) {\n        handleLike(id);\n      }).catch(function (error) {\n        console.error(\"Error:\", error);\n      });\n    }\n  }, {\n    key: \"handleVote\",\n    value: function handleVote(index) {\n      var handleVote = this.props.handleVote;\n      var id = this.props.poll.id;\n      var vote = {\n        id: this.props.poll.id,\n        user: this.props.voter,\n        choice: index + 1\n      };\n      fetch(\"http://3.221.234.184:3001/api/polls/\" + vote.id + \"/\" + vote.user + \"/\" + vote.choice, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"patch\"\n      }).then(function (response) {\n        handleVote(id);\n      }).catch(function (error) {\n        console.error(\"Error:\", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var poll = this.props.poll;\n      var percentages = [];\n      var maxPercentage = 0;\n\n      for (var _i = 0; _i < poll.answers.length; _i++) {\n        percentages.push(poll.results[_i] / this.props.poll.votes * 100);\n\n        if (poll.results[_i] / this.props.poll.votes * 100 > maxPercentage) {\n          maxPercentage = poll.results[_i] / this.props.poll.votes * 100;\n        }\n      }\n\n      var alreadyVoted = false;\n\n      if (poll.voters) {\n        for (var _i2 = 0; _i2 < poll.voters.length; _i2++) {\n          if (poll.voters[_i2] === this.props.voter) {\n            alreadyVoted = true;\n            break;\n          }\n        }\n      }\n\n      var alreadyLiked = false;\n\n      for (var i = 0; i < this.props.poll.likers.length; i++) {\n        if (this.props.poll.likers[i] === this.props.voter) {\n          alreadyLiked = true;\n          break;\n        }\n      }\n\n      if (this.state.user) {\n        return React.createElement(View, {\n          style: [styles.container],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContet: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }\n        }, React.createElement(Thumbnail, {\n          source: {\n            uri: \"\" + this.state.user.url\n          },\n          style: {\n            width: 30,\n            height: 30,\n            borderRadius: 15,\n            marginRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: \"#202020\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }\n        }, \"\" + this.state.user.name)), React.createElement(View, {\n          style: {\n            textAlign: \"right\",\n            alignSelf: \"center\",\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            fontStyle: \"italic\",\n            fontSize: 10,\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"right\",\n            alignSelf: \"flex-start\",\n            alignContent: \"flex-start\",\n            fontStyle: \"italic\",\n            fontSize: 10,\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }\n        }, moment(this.props.poll.created).fromNow()))), React.createElement(Text, {\n          style: styles.question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }\n        }, this.props.poll.question), this.props.poll.answers.map(function (answer, i) {\n          return React.createElement(Choice, {\n            key: i,\n            poll: _this3.props.poll,\n            index: i,\n            handleVote: _this3.handleVote,\n            voter: _this3.props.voter,\n            hasUpdated: _this3.state.hasUpdated,\n            width: new Animated.Value(0),\n            percentage: _this3.props.poll.votes > 0 ? _this3.props.poll.results[i] / _this3.props.poll.votes * 100 : 0,\n            maxPercentage: maxPercentage,\n            alreadyVoted: alreadyVoted,\n            alreadyLiked: alreadyLiked,\n            animate: _this3.props.animate,\n            isSelf: _this3.props.voter.id === _this3.props.poll.by,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }\n          });\n        }), React.createElement(View, {\n          style: {\n            flex: 1,\n            alignSelf: \"center\",\n            flexDirection: \"row\",\n            marginTop: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }\n        }, React.createElement(Stat, {\n          items: this.props.poll.votes,\n          type: \"votes\",\n          icon: \"vote\",\n          user: this.props.voter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }\n        }), React.createElement(Stat, {\n          items: this.props.poll.likes,\n          type: \"likes\",\n          icon: \"hand-peace\",\n          like: this.like,\n          user: this.props.voter,\n          alreadyLiked: alreadyLiked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }\n        }), React.createElement(Stat, {\n          items: this.props.poll.comments,\n          user: this.state.user,\n          type: \"comments\",\n          commenters: this.props.poll.commenters,\n          icon: \"comment-text-multiple-outline\",\n          comment: this.comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return You;\n}(Component);\n\nexport { You as default };\nvar styles = StyleSheet.create({\n  question: {\n    fontSize: 15,\n    alignSelf: \"flex-start\",\n    paddingLeft: 0,\n    marginVertical: 10,\n    fontWeight: \"bold\",\n    color: \"#202020\"\n  },\n  new: {\n    borderColor: \"#FDDE4E\",\n    borderWidth: 1\n  },\n  container: {\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    flex: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    padding: 15,\n    marginVertical: 10,\n    width: \"90%\",\n    shadowColor: \"#d9d9d9\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 30\n  },\n  thumbnail: {\n    borderTopWidth: 2,\n    borderColor: \"#F2F2F2\",\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginVertical: 15\n  }\n});","map":{"version":3,"sources":["/Users/robertheler/Desktop/Hack Reactor/pollee/components/Poll.js"],"names":["React","Component","Thumbnail","Choice","moment","format","MaterialCommunityIcons","Stat","SlidingPanel","Dimensions","get","width","height","You","props","state","user","undefined","initialOpacity","Animated","Value","handleVote","bind","like","comment","grabUserInfo","poll","by","then","setState","id","fetch","response","json","catch","error","console","commenter","voter","handleComment","headers","Accept","method","body","JSON","stringify","handleLike","index","vote","choice","percentages","maxPercentage","i","answers","length","push","results","votes","alreadyVoted","voters","alreadyLiked","likers","styles","container","flex","flexDirection","justifyContent","alignItems","justifyContet","uri","url","borderRadius","marginRight","color","name","textAlign","alignSelf","alignContent","fontStyle","fontSize","created","fromNow","question","map","answer","hasUpdated","animate","marginTop","likes","comments","commenters","StyleSheet","create","paddingLeft","marginVertical","fontWeight","new","borderColor","borderWidth","backgroundColor","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","thumbnail","borderTopWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport { Thumbnail } from \"native-base\";\nimport Choice from \"./Choice.js\";\nimport moment from \"moment\"; // require\nimport { Animated, Dimensions } from \"react-native\";\nmoment().format();\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport Stat from \"./Stat\";\nimport SlidingPanel from \"react-native-sliding-up-down-panels\";\nconst { width, height } = Dimensions.get(\"window\");\n\nexport default class You extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: undefined,\n      initialOpacity: new Animated.Value(0)\n    };\n    this.handleVote = this.handleVote.bind(this);\n    this.like = this.like.bind(this);\n    this.comment = this.comment.bind(this);\n  }\n\n  componentDidMount() {\n    this.grabUserInfo(this.props.poll.by).then(user => {\n      this.setState({ user });\n    });\n  }\n\n  grabUserInfo(id) {\n    return fetch(`http://3.221.234.184:3001/api/users/${id}`)\n      .then(response => response.json())\n      .then(json => {\n        return json[0];\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  comment(comment) {\n    let id = this.props.poll.id;\n    let commenter = this.props.voter;\n    let handleComment = this.props.handleComment;\n\n    fetch(`http://3.221.234.184:3001/api/comment/${id}/${commenter}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"patch\",\n      body: JSON.stringify({ comment })\n    })\n      .then(function(response) {\n        handleComment(id);\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  like() {\n    // if user hasn't already liked, like.\n    let id = this.props.poll.id;\n    let voter = this.props.voter;\n    let handleLike = this.props.handleLike;\n\n    fetch(`http://3.221.234.184:3001/api/likepoll/${id}/${voter}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"patch\"\n    })\n      .then(function(response) {\n        handleLike(id);\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  handleVote(index) {\n    //re-render\n    let handleVote = this.props.handleVote;\n    let id = this.props.poll.id;\n    let vote = {\n      id: this.props.poll.id,\n      user: this.props.voter,\n      choice: index + 1 //postgres is not 0-indexed\n    };\n\n    fetch(\n      `http://3.221.234.184:3001/api/polls/${vote.id}/${vote.user}/${vote.choice}`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"patch\"\n      }\n    )\n      .then(function(response) {\n        handleVote(id);\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  render() {\n    let poll = this.props.poll;\n\n    let percentages = [];\n    let maxPercentage = 0;\n\n    for (let i = 0; i < poll.answers.length; i++) {\n      percentages.push((poll.results[i] / this.props.poll.votes) * 100);\n      if ((poll.results[i] / this.props.poll.votes) * 100 > maxPercentage) {\n        maxPercentage = (poll.results[i] / this.props.poll.votes) * 100;\n      }\n    }\n    let alreadyVoted = false;\n    if (poll.voters) {\n      for (let i = 0; i < poll.voters.length; i++) {\n        if (poll.voters[i] === this.props.voter) {\n          alreadyVoted = true;\n          break;\n        }\n      }\n    }\n\n    let alreadyLiked = false;\n    for (var i = 0; i < this.props.poll.likers.length; i++) {\n      if (this.props.poll.likers[i] === this.props.voter) {\n        alreadyLiked = true;\n        break;\n      }\n    }\n\n    if (this.state.user) {\n      return (\n        <View style={[styles.container]}>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                justifyContet: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <Thumbnail\n                source={{ uri: `${this.state.user.url}` }}\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 15,\n                  marginRight: 10\n                }}\n              />\n              <Text\n                style={{ color: \"#202020\" }}\n              >{`${this.state.user.name}`}</Text>\n            </View>\n            <View\n              style={{\n                textAlign: \"right\",\n                alignSelf: \"center\",\n                alignContent: \"center\",\n                justifyContent: \"center\",\n                fontStyle: \"italic\",\n                fontSize: 10,\n                color: \"gray\"\n              }}\n            >\n              <Text\n                style={{\n                  textAlign: \"right\",\n                  alignSelf: \"flex-start\",\n                  alignContent: \"flex-start\",\n                  fontStyle: \"italic\",\n                  fontSize: 10,\n                  color: \"gray\"\n                }}\n              >\n                {moment(this.props.poll.created).fromNow()}\n              </Text>\n            </View>\n          </View>\n          <Text style={styles.question}>{this.props.poll.question}</Text>\n          {this.props.poll.answers.map((answer, i) => {\n            return (\n              <Choice\n                key={i}\n                poll={this.props.poll}\n                index={i}\n                handleVote={this.handleVote}\n                voter={this.props.voter}\n                hasUpdated={this.state.hasUpdated}\n                width={new Animated.Value(0)}\n                percentage={\n                  this.props.poll.votes > 0\n                    ? (this.props.poll.results[i] / this.props.poll.votes) * 100\n                    : 0\n                }\n                maxPercentage={maxPercentage}\n                alreadyVoted={alreadyVoted}\n                alreadyLiked={alreadyLiked}\n                animate={this.props.animate}\n                isSelf={this.props.voter.id === this.props.poll.by}\n              />\n            );\n          })}\n          <View\n            style={{\n              flex: 1,\n              alignSelf: \"center\",\n              flexDirection: \"row\",\n              //alignItems: \"space-between\",\n              marginTop: 0\n            }}\n          >\n            <Stat\n              items={this.props.poll.votes}\n              //replace items with this.props.poll.voters eventually\n              type=\"votes\"\n              icon=\"vote\"\n              user={this.props.voter}\n            />\n            <Stat\n              items={this.props.poll.likes}\n              //replace items with this.props.poll.voters eventually\n              type=\"likes\"\n              icon=\"hand-peace\"\n              like={this.like}\n              user={this.props.voter}\n              alreadyLiked={alreadyLiked}\n            />\n            <Stat\n              items={this.props.poll.comments}\n              user={this.state.user}\n              type=\"comments\"\n              commenters={this.props.poll.commenters}\n              icon=\"comment-text-multiple-outline\"\n              comment={this.comment}\n            />\n          </View>\n        </View>\n      );\n    } else {\n      return <View></View>;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  question: {\n    fontSize: 15,\n    alignSelf: \"flex-start\",\n    paddingLeft: 0,\n    marginVertical: 10,\n    fontWeight: \"bold\",\n    color: \"#202020\"\n  },\n  new: {\n    borderColor: \"#FDDE4E\",\n    borderWidth: 1\n  },\n  container: {\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    flex: 1,\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    padding: 15,\n    marginVertical: 10,\n    width: \"90%\",\n    shadowColor: \"#d9d9d9\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 30\n  },\n  thumbnail: {\n    borderTopWidth: 2,\n    borderColor: \"#F2F2F2\",\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginVertical: 15\n  }\n});\n"]},"metadata":{},"sourceType":"module"}