{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/robertheler/Desktop/Hack Reactor/pollee/node_modules/react-native-sliding-up-down-panels/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar sliderPosition = 0;\nvar styles = StyleSheet.create({\n  headerPanelViewStyle: {\n    width: width,\n    backgroundColor: '#ff0032',\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  }\n});\n\nvar HeaderView = function HeaderView(props) {\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 47\n    }\n  }, \"Hello world\"));\n};\n\nvar SlidingPanelView = function SlidingPanelView(props) {\n  return React.createElement(View, {\n    style: {\n      height: 200,\n      width: width,\n      backgroundColor: 'blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 65\n    }\n  }, \"Hello world\"));\n};\n\nvar SlidingPanelIOS = function SlidingPanelIOS(props) {\n  return React.createElement(Animated.View, {\n    style: props.panelPosition === 'bottom' ? {\n      bottom: props.heightAnim,\n      flex: 1,\n      position: 'absolute'\n    } : {\n      top: props.heightAnim,\n      flex: 1,\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, React.createElement(Animated.View, _extends({}, props.panResponder, {\n    style: {\n      height: props.headerPanelHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), props.headerView()), React.createElement(View, {\n    style: props.panelPosition === 'bottom' ? {\n      top: props.headerPanelHeight,\n      left: 0,\n      position: 'absolute'\n    } : {\n      bottom: props.headerPanelHeight,\n      left: 0,\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, props.slidingPanelView()));\n};\n\nvar SlidingPanelAndroid = function SlidingPanelAndroid(props) {\n  return React.createElement(Animated.View, {\n    style: props.panelPosition === 'bottom' ? {\n      bottom: props.heightAnim,\n      flex: 1,\n      position: 'absolute'\n    } : {\n      top: props.heightAnim,\n      flex: 1,\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.View, _extends({}, props.panResponder, {\n    style: {\n      height: props.headerPanelHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), props.headerView()), React.createElement(Animated.View, {\n    style: props.panelPosition === 'bottom' ? {\n      top: props.headerPanelHeight,\n      left: 0,\n      position: 'absolute'\n    } : {\n      bottom: props.headerPanelHeight,\n      left: 0,\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, props.slidingPanelView()));\n};\n\nvar SlidingPanel = function (_Component) {\n  _inherits(SlidingPanel, _Component);\n\n  var _super = _createSuper(SlidingPanel);\n\n  function SlidingPanel(props) {\n    var _this;\n\n    _classCallCheck(this, SlidingPanel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      heightAnim: new Animated.Value(0),\n      panResponder: {}\n    };\n    return _this;\n  }\n\n  _createClass(SlidingPanel, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var a = 0;\n      this.state.panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n          a = 0;\n        },\n        onPanResponderMove: function onPanResponderMove(event, gestureState) {\n          if (_this2.props.allowDragging) {\n            if (a === 0) {\n              _this2.props.onDragStart(event, gestureState);\n            } else {\n              _this2.props.onDrag(event, gestureState);\n            }\n\n            if (_this2.props.panelPosition === 'bottom') {\n              a = gestureState.dy * -1;\n            } else {\n              a = gestureState.dy * 1;\n            }\n\n            if ((Platform.OS === 'android' ? sliderPosition + a < height - (_this2.props.headerLayoutHeight + 25) : sliderPosition + a < height - (_this2.props.headerLayoutHeight - 2)) && sliderPosition + a > -2) {\n              if (sliderPosition !== 0) {\n                _this2.state.heightAnim.setValue(sliderPosition + a);\n              } else {\n                _this2.state.heightAnim.setValue(a);\n              }\n            }\n          }\n        },\n        onPanResponderRelease: function onPanResponderRelease(e, gesture) {\n          sliderPosition = sliderPosition + a;\n\n          if (a !== 0) {\n            _this2.props.onDragStop(e, gesture);\n          }\n\n          if (_this2.props.allowAnimation) {\n            if (a === 0 || (_this2.props.panelPosition === 'bottom' ? gesture.vy < -1 : gesture.vy > 1)) {\n              if (sliderPosition < height - _this2.props.headerLayoutHeight) {\n                sliderPosition = height - _this2.props.headerLayoutHeight;\n\n                _this2.props.onAnimationStart();\n\n                Animated.timing(_this2.state.heightAnim, {\n                  toValue: Platform.OS === 'android' ? height - _this2.props.headerLayoutHeight - 25 : height - _this2.props.headerLayoutHeight,\n                  duration: _this2.props.AnimationSpeed\n                }).start(function () {\n                  return _this2.props.onAnimationStop();\n                });\n              } else {\n                sliderPosition = 0;\n\n                _this2.props.onAnimationStart();\n\n                Animated.timing(_this2.state.heightAnim, {\n                  toValue: 0,\n                  duration: _this2.props.AnimationSpeed\n                }).start(function () {\n                  return _this2.props.onAnimationStop();\n                });\n              }\n            }\n\n            if (_this2.props.panelPosition === 'bottom' ? gesture.vy > 1 : gesture.vy < -1) {\n              sliderPosition = 0;\n\n              _this2.props.onAnimationStart();\n\n              Animated.timing(_this2.state.heightAnim, {\n                toValue: 0,\n                duration: _this2.props.AnimationSpeed\n              }).start(function () {\n                return _this2.props.onAnimationStop();\n              });\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"onRequestClose\",\n    value: function onRequestClose() {\n      sliderPosition = 0;\n      Animated.timing(this.state.heightAnim, {\n        toValue: 0,\n        duration: this.props.AnimationSpeed\n      }).start();\n    }\n  }, {\n    key: \"onRequestStart\",\n    value: function onRequestStart() {\n      sliderPosition = height - this.props.headerLayoutHeight;\n      Animated.timing(this.state.heightAnim, {\n        toValue: Platform.OS === 'android' ? height - this.props.headerLayoutHeight - 25 : height - this.props.headerLayoutHeight,\n        duration: this.props.AnimationSpeed\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: this.props.panelPosition === 'bottom' ? {\n          position: 'absolute',\n          bottom: 0\n        } : {\n          position: 'absolute',\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      }, Platform.OS === 'ios' && this.props.visible === true ? React.createElement(SlidingPanelIOS, {\n        panResponder: this.state.panResponder.panHandlers,\n        panelPosition: this.props.panelPosition,\n        headerPanelHeight: this.props.headerLayoutHeight,\n        headerView: function headerView() {\n          return _this3.props.headerLayout();\n        },\n        heightAnim: this.state.heightAnim,\n        visible: this.props.visible,\n        slidingPanelView: function slidingPanelView() {\n          return _this3.props.slidingPanelLayout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }) : this.props.visible === true && React.createElement(SlidingPanelAndroid, {\n        panResponder: this.state.panResponder.panHandlers,\n        panelPosition: this.props.panelPosition,\n        headerPanelHeight: this.props.headerLayoutHeight,\n        headerView: function headerView() {\n          return _this3.props.headerLayout();\n        },\n        heightAnim: this.state.heightAnim,\n        visible: this.props.visible,\n        slidingPanelView: function slidingPanelView() {\n          return _this3.props.slidingPanelLayout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return SlidingPanel;\n}(Component);\n\nexport { SlidingPanel as default };\nSlidingPanel.propTypes = {\n  headerLayoutHeight: PropTypes.number.isRequired,\n  headerLayout: PropTypes.func.isRequired,\n  slidingPanelLayout: PropTypes.func.isRequired,\n  AnimationSpeed: PropTypes.number,\n  slidingPanelLayoutHeight: PropTypes.number,\n  panelPosition: PropTypes.string,\n  visible: PropTypes.bool,\n  allowDragging: PropTypes.bool,\n  allowAnimation: PropTypes.bool,\n  onDragStart: function onDragStart(event, gestureState) {},\n  onDragStop: function onDragStop(event, gestureState) {},\n  onDrag: function onDrag(event, gestureState) {},\n  onAnimationStart: function onAnimationStart() {},\n  onAnimationStop: function onAnimationStop() {}\n};\nSlidingPanel.defaultProps = {\n  panelPosition: 'bottom',\n  headerLayoutHeight: 50,\n  headerLayout: function headerLayout() {},\n  visible: true,\n  onDragStart: function onDragStart(event, gestureState) {},\n  onDragStop: function onDragStop(event, gestureState) {},\n  onDrag: function onDrag(event, gestureState) {},\n  onAnimationStart: function onAnimationStart() {},\n  onAnimationStop: function onAnimationStop() {},\n  slidingPanelLayout: function slidingPanelLayout() {},\n  allowDragging: true,\n  allowAnimation: true,\n  slidingPanelLayoutHeight: 0,\n  AnimationSpeed: 1000\n};","map":{"version":3,"sources":["/Users/robertheler/Desktop/Hack Reactor/pollee/node_modules/react-native-sliding-up-down-panels/index.js"],"names":["React","Component","PropTypes","Dimensions","get","width","height","sliderPosition","styles","StyleSheet","create","headerPanelViewStyle","backgroundColor","position","alignSelf","justifyContent","alignItems","flex","HeaderView","props","color","SlidingPanelView","SlidingPanelIOS","panelPosition","bottom","heightAnim","top","panResponder","headerPanelHeight","headerView","left","slidingPanelView","SlidingPanelAndroid","SlidingPanel","state","Animated","Value","a","PanResponder","onStartShouldSetPanResponder","onPanResponderGrant","evt","gestureState","onPanResponderMove","event","allowDragging","onDragStart","onDrag","dy","Platform","OS","headerLayoutHeight","setValue","onPanResponderRelease","e","gesture","onDragStop","allowAnimation","vy","onAnimationStart","timing","toValue","duration","AnimationSpeed","start","onAnimationStop","visible","panHandlers","headerLayout","slidingPanelLayout","propTypes","number","isRequired","func","slidingPanelLayoutHeight","string","bool","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;;;;sBAW0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AACf,IAAIC,cAAc,GAAG,CAArB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,oBAAoB,EAAE;AACpBN,IAAAA,KAAK,EAALA,KADoB;AAEpBO,IAAAA,eAAe,EAAE,SAFG;AAGpBC,IAAAA,QAAQ,EAAE,UAHU;AAIpBC,IAAAA,SAAS,EAAE,UAJS;AAKpBC,IAAAA,cAAc,EAAE,QALI;AAMpBC,IAAAA,UAAU,EAAE,QANQ;AAOpBC,IAAAA,IAAI,EAAE;AAPc;AADS,CAAlB,CAAf;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;AAAA,SACf,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACP,MAAAA,eAAe,EAAE;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA1C,CADe;AAAA,CAAnB;;AAIE,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,KAAD;AAAA,SACvB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACb,MAAAA,MAAM,EAAE,GAAT;AAAcD,MAAAA,KAAK,EAALA,KAAd;AAAqBO,MAAAA,eAAe,EAAE;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5D,CADuB;AAAA,CAAzB;;AAIF,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD;AAAA,SACtB,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEA,KAAK,CAACI,aAAN,KAAwB,QAAxB,GAAmC;AAACC,MAAAA,MAAM,EAAEL,KAAK,CAACM,UAAf;AAA2BR,MAAAA,IAAI,EAAE,CAAjC;AAAoCJ,MAAAA,QAAQ,EAAE;AAA9C,KAAnC,GAAgG;AAACa,MAAAA,GAAG,EAAEP,KAAK,CAACM,UAAZ;AAAwBR,MAAAA,IAAI,EAAE,CAA9B;AAAiCJ,MAAAA,QAAQ,EAAE;AAA3C,KAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV,eACYM,KAAK,CAACQ,YADlB;AACgC,IAAA,KAAK,EAAE;AAACrB,MAAAA,MAAM,EAAEa,KAAK,CAACS;AAAf,KADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEGT,KAAK,CAACU,UAAN,EAFH,CADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,KAAK,CAACI,aAAN,KAAwB,QAAxB,GAAmC;AAACG,MAAAA,GAAG,EAAEP,KAAK,CAACS,iBAAZ;AAA+BE,MAAAA,IAAI,EAAE,CAArC;AAAwCjB,MAAAA,QAAQ,EAAE;AAAlD,KAAnC,GAAoG;AAACW,MAAAA,MAAM,EAAEL,KAAK,CAACS,iBAAf;AAAkCE,MAAAA,IAAI,EAAE,CAAxC;AAA2CjB,MAAAA,QAAQ,EAAE;AAArD,KAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,CAACY,gBAAN,EADH,CALF,CADsB;AAAA,CAAxB;;AAYA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACb,KAAD;AAAA,SACxB,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEA,KAAK,CAACI,aAAN,KAAwB,QAAxB,GAAmC;AAACC,MAAAA,MAAM,EAAEL,KAAK,CAACM,UAAf;AAA2BR,MAAAA,IAAI,EAAE,CAAjC;AAAoCJ,MAAAA,QAAQ,EAAE;AAA9C,KAAnC,GAAgG;AAACa,MAAAA,GAAG,EAAEP,KAAK,CAACM,UAAZ;AAAwBR,MAAAA,IAAI,EAAE,CAA9B;AAAiCJ,MAAAA,QAAQ,EAAE;AAA3C,KAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD,CAAU,IAAV,eACYM,KAAK,CAACQ,YADlB;AACgC,IAAA,KAAK,EAAE;AAACrB,MAAAA,MAAM,EAAEa,KAAK,CAACS;AAAf,KADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEGT,KAAK,CAACU,UAAN,EAFH,CADA,EAKA,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEV,KAAK,CAACI,aAAN,KAAwB,QAAxB,GAAmC;AAACG,MAAAA,GAAG,EAAEP,KAAK,CAACS,iBAAZ;AAA+BE,MAAAA,IAAI,EAAE,CAArC;AAAwCjB,MAAAA,QAAQ,EAAE;AAAlD,KAAnC,GAAoG;AAACW,MAAAA,MAAM,EAAEL,KAAK,CAACS,iBAAf;AAAkCE,MAAAA,IAAI,EAAE,CAAxC;AAA2CjB,MAAAA,QAAQ,EAAE;AAArD,KAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,CAACY,gBAAN,EADH,CALA,CADwB;AAAA,CAA5B;;IAYqBE,Y;;;;;AAEnB,wBAAYd,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKe,KAAL,GAAa;AACXT,MAAAA,UAAU,EAAE,IAAIU,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADD;AAEXT,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFiB;AAMlB;;;;yCAEoB;AAAA;;AACnB,UAAIU,CAAC,GAAG,CAAR;AACA,WAAKH,KAAL,CAAWP,YAAX,GAA0BW,YAAY,CAAC5B,MAAb,CAAoB;AAC5C6B,QAAAA,4BAA4B,EAAG;AAAA,iBAAM,IAAN;AAAA,SADa;AAE5CC,QAAAA,mBAAmB,EAAE,6BAACC,GAAD,EAAMC,YAAN,EAAuB;AAC1CL,UAAAA,CAAC,GAAG,CAAJ;AACD,SAJ2C;AAK5CM,QAAAA,kBAAkB,EAAE,4BAACC,KAAD,EAAQF,YAAR,EAAyB;AAC3C,cAAG,MAAI,CAACvB,KAAL,CAAW0B,aAAd,EAA6B;AAC3B,gBAAGR,CAAC,KAAK,CAAT,EAAY;AACV,cAAA,MAAI,CAAClB,KAAL,CAAW2B,WAAX,CAAuBF,KAAvB,EAA8BF,YAA9B;AACD,aAFD,MAGK;AACH,cAAA,MAAI,CAACvB,KAAL,CAAW4B,MAAX,CAAkBH,KAAlB,EAAyBF,YAAzB;AACD;;AACD,gBAAG,MAAI,CAACvB,KAAL,CAAWI,aAAX,KAA6B,QAAhC,EAA0C;AACxCc,cAAAA,CAAC,GAAGK,YAAY,CAACM,EAAb,GAAkB,CAAC,CAAvB;AACD,aAFD,MAGK;AACHX,cAAAA,CAAC,GAAGK,YAAY,CAACM,EAAb,GAAkB,CAAtB;AACD;;AACD,gBAAG,CAACC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B3C,cAAc,GAAG8B,CAAjB,GAAqB/B,MAAM,IAAI,MAAI,CAACa,KAAL,CAAWgC,kBAAX,GAAgC,EAApC,CAAvD,GAAgG5C,cAAc,GAAG8B,CAAjB,GAAqB/B,MAAM,IAAI,MAAI,CAACa,KAAL,CAAWgC,kBAAX,GAA+B,CAAnC,CAA5H,KAAsK5C,cAAc,GAAG8B,CAAjB,GAAqB,CAAC,CAA/L,EAAiM;AAC/L,kBAAG9B,cAAc,KAAK,CAAtB,EAAyB;AACvB,gBAAA,MAAI,CAAC2B,KAAL,CAAWT,UAAX,CAAsB2B,QAAtB,CAA+B7C,cAAc,GAAG8B,CAAhD;AACD,eAFD,MAGK;AACH,gBAAA,MAAI,CAACH,KAAL,CAAWT,UAAX,CAAsB2B,QAAtB,CAA+Bf,CAA/B;AACD;AACF;AACF;AACF,SA5B2C;AA6B5CgB,QAAAA,qBAAqB,EAAU,+BAACC,CAAD,EAAIC,OAAJ,EAAgB;AAC7ChD,UAAAA,cAAc,GAAGA,cAAc,GAAG8B,CAAlC;;AACA,cAAGA,CAAC,KAAK,CAAT,EAAY;AACV,YAAA,MAAI,CAAClB,KAAL,CAAWqC,UAAX,CAAsBF,CAAtB,EAAyBC,OAAzB;AACD;;AAED,cAAG,MAAI,CAACpC,KAAL,CAAWsC,cAAd,EAA8B;AAC5B,gBAAGpB,CAAC,KAAK,CAAN,KAAY,MAAI,CAAClB,KAAL,CAAWI,aAAX,KAA6B,QAA7B,GAAwCgC,OAAO,CAACG,EAAR,GAAa,CAAC,CAAtD,GAA0DH,OAAO,CAACG,EAAR,GAAa,CAAnF,CAAH,EAA0F;AACxF,kBAAGnD,cAAc,GAAGD,MAAM,GAAC,MAAI,CAACa,KAAL,CAAWgC,kBAAtC,EAA0D;AACxD5C,gBAAAA,cAAc,GAAGD,MAAM,GAAC,MAAI,CAACa,KAAL,CAAWgC,kBAAnC;;AACA,gBAAA,MAAI,CAAChC,KAAL,CAAWwC,gBAAX;;AACAxB,gBAAAA,QAAQ,CAACyB,MAAT,CACE,MAAI,CAAC1B,KAAL,CAAWT,UADb,EAEE;AACEoC,kBAAAA,OAAO,EAAEZ,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B5C,MAAM,GAAC,MAAI,CAACa,KAAL,CAAWgC,kBAAlB,GAAuC,EAAnE,GAAwE7C,MAAM,GAAC,MAAI,CAACa,KAAL,CAAWgC,kBADrG;AAEEW,kBAAAA,QAAQ,EAAE,MAAI,CAAC3C,KAAL,CAAW4C;AAFvB,iBAFF,EAMEC,KANF,CAMQ;AAAA,yBAAM,MAAI,CAAC7C,KAAL,CAAW8C,eAAX,EAAN;AAAA,iBANR;AAOD,eAVD,MAWK;AACH1D,gBAAAA,cAAc,GAAG,CAAjB;;AACA,gBAAA,MAAI,CAACY,KAAL,CAAWwC,gBAAX;;AACAxB,gBAAAA,QAAQ,CAACyB,MAAT,CACE,MAAI,CAAC1B,KAAL,CAAWT,UADb,EAEE;AACEoC,kBAAAA,OAAO,EAAE,CADX;AAEEC,kBAAAA,QAAQ,EAAE,MAAI,CAAC3C,KAAL,CAAW4C;AAFvB,iBAFF,EAMEC,KANF,CAMQ;AAAA,yBAAM,MAAI,CAAC7C,KAAL,CAAW8C,eAAX,EAAN;AAAA,iBANR;AAOD;AACF;;AACD,gBAAG,MAAI,CAAC9C,KAAL,CAAWI,aAAX,KAA6B,QAA7B,GAAwCgC,OAAO,CAACG,EAAR,GAAa,CAArD,GAAyDH,OAAO,CAACG,EAAR,GAAa,CAAC,CAA1E,EAA6E;AAC3EnD,cAAAA,cAAc,GAAG,CAAjB;;AACA,cAAA,MAAI,CAACY,KAAL,CAAWwC,gBAAX;;AACAxB,cAAAA,QAAQ,CAACyB,MAAT,CACE,MAAI,CAAC1B,KAAL,CAAWT,UADb,EAEE;AACEoC,gBAAAA,OAAO,EAAE,CADX;AAEEC,gBAAAA,QAAQ,EAAE,MAAI,CAAC3C,KAAL,CAAW4C;AAFvB,eAFF,EAMEC,KANF,CAMQ;AAAA,uBAAM,MAAI,CAAC7C,KAAL,CAAW8C,eAAX,EAAN;AAAA,eANR;AAOD;AACF;AACF;AAxE2C,OAApB,CAA1B;AA0ED;;;qCAEgB;AACf1D,MAAAA,cAAc,GAAG,CAAjB;AACA4B,MAAAA,QAAQ,CAACyB,MAAT,CACE,KAAK1B,KAAL,CAAWT,UADb,EAEE;AACEoC,QAAAA,OAAO,EAAE,CADX;AAEEC,QAAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAW4C;AAFvB,OAFF,EAMEC,KANF;AAOD;;;qCAEgB;AACfzD,MAAAA,cAAc,GAAGD,MAAM,GAAC,KAAKa,KAAL,CAAWgC,kBAAnC;AACAhB,MAAAA,QAAQ,CAACyB,MAAT,CACE,KAAK1B,KAAL,CAAWT,UADb,EAEE;AACEoC,QAAAA,OAAO,EAAEZ,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B5C,MAAM,GAAC,KAAKa,KAAL,CAAWgC,kBAAlB,GAAuC,EAAnE,GAAwE7C,MAAM,GAAC,KAAKa,KAAL,CAAWgC,kBADrG;AAEEW,QAAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAW4C;AAFvB,OAFF,EAMEC,KANF;AAOD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWI,aAAX,KAA6B,QAA7B,GAAwC;AAACV,UAAAA,QAAQ,EAAE,UAAX;AAAuBW,UAAAA,MAAM,EAAE;AAA/B,SAAxC,GAA4E;AAACX,UAAAA,QAAQ,EAAE,UAAX;AAAuBa,UAAAA,GAAG,EAAE;AAA5B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIuB,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,KAAK/B,KAAL,CAAW+C,OAAX,KAAuB,IAAhD,GACE,oBAAC,eAAD;AACI,QAAA,YAAY,EAAI,KAAKhC,KAAL,CAAWP,YAAX,CAAwBwC,WAD5C;AAEI,QAAA,aAAa,EAAE,KAAKhD,KAAL,CAAWI,aAF9B;AAGI,QAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWgC,kBAHlC;AAII,QAAA,UAAU,EAAI;AAAA,iBAAM,MAAI,CAAChC,KAAL,CAAWiD,YAAX,EAAN;AAAA,SAJlB;AAKI,QAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWT,UAL3B;AAMI,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAW+C,OANxB;AAOI,QAAA,gBAAgB,EAAE;AAAA,iBAAM,MAAI,CAAC/C,KAAL,CAAWkD,kBAAX,EAAN;AAAA,SAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GASO,KAAKlD,KAAL,CAAW+C,OAAX,KAAuB,IAAvB,IACL,oBAAC,mBAAD;AACI,QAAA,YAAY,EAAI,KAAKhC,KAAL,CAAWP,YAAX,CAAwBwC,WAD5C;AAEI,QAAA,aAAa,EAAE,KAAKhD,KAAL,CAAWI,aAF9B;AAGI,QAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWgC,kBAHlC;AAII,QAAA,UAAU,EAAI;AAAA,iBAAM,MAAI,CAAChC,KAAL,CAAWiD,YAAX,EAAN;AAAA,SAJlB;AAKI,QAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWT,UAL3B;AAMI,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAW+C,OANxB;AAOI,QAAA,gBAAgB,EAAE;AAAA,iBAAM,MAAI,CAAC/C,KAAL,CAAWkD,kBAAX,EAAN;AAAA,SAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZN,CADF;AAyBD;;;;EAxIuCpE,S;;SAArBgC,Y;AA2IrBA,YAAY,CAACqC,SAAb,GAAyB;AACvBnB,EAAAA,kBAAkB,EAAEjD,SAAS,CAACqE,MAAV,CAAiBC,UADd;AAEvBJ,EAAAA,YAAY,EAAElE,SAAS,CAACuE,IAAV,CAAeD,UAFN;AAGvBH,EAAAA,kBAAkB,EAAEnE,SAAS,CAACuE,IAAV,CAAeD,UAHZ;AAKvBT,EAAAA,cAAc,EAAE7D,SAAS,CAACqE,MALH;AAMvBG,EAAAA,wBAAwB,EAAExE,SAAS,CAACqE,MANb;AAOvBhD,EAAAA,aAAa,EAAErB,SAAS,CAACyE,MAPF;AAQvBT,EAAAA,OAAO,EAAEhE,SAAS,CAAC0E,IARI;AASvB/B,EAAAA,aAAa,EAAE3C,SAAS,CAAC0E,IATF;AAUvBnB,EAAAA,cAAc,EAAEvD,SAAS,CAAC0E,IAVH;AAWvB9B,EAAAA,WAAW,EAAE,qBAACF,KAAD,EAAQF,YAAR,EAAyB,CAAE,CAXjB;AAYvBc,EAAAA,UAAU,EAAE,oBAACZ,KAAD,EAAQF,YAAR,EAAyB,CAAE,CAZhB;AAavBK,EAAAA,MAAM,EAAE,gBAACH,KAAD,EAAQF,YAAR,EAAyB,CAAE,CAbZ;AAcvBiB,EAAAA,gBAAgB,EAAE,4BAAM,CAAE,CAdH;AAevBM,EAAAA,eAAe,EAAE,2BAAM,CAAE;AAfF,CAAzB;AAkBAhC,YAAY,CAAC4C,YAAb,GAA4B;AAC1BtD,EAAAA,aAAa,EAAE,QADW;AAE1B4B,EAAAA,kBAAkB,EAAE,EAFM;AAG1BiB,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAHI;AAI1BF,EAAAA,OAAO,EAAE,IAJiB;AAK1BpB,EAAAA,WAAW,EAAE,qBAACF,KAAD,EAAQF,YAAR,EAAyB,CAAE,CALd;AAM1Bc,EAAAA,UAAU,EAAE,oBAACZ,KAAD,EAAQF,YAAR,EAAyB,CAAE,CANb;AAO1BK,EAAAA,MAAM,EAAE,gBAACH,KAAD,EAAQF,YAAR,EAAyB,CAAE,CAPT;AAQ1BiB,EAAAA,gBAAgB,EAAE,4BAAM,CAAE,CARA;AAS1BM,EAAAA,eAAe,EAAE,2BAAM,CAAE,CATC;AAU1BI,EAAAA,kBAAkB,EAAE,8BAAM,CAAE,CAVF;AAW1BxB,EAAAA,aAAa,EAAE,IAXW;AAY1BY,EAAAA,cAAc,EAAE,IAZU;AAa1BiB,EAAAA,wBAAwB,EAAE,CAbA;AAc1BX,EAAAA,cAAc,EAAE;AAdU,CAA5B","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n  Animated,\n  Dimensions,\n  PanResponder,\n  TouchableOpacity,\n} from 'react-native';\nconst { width, height } = Dimensions.get('window');\nlet sliderPosition = 0;\n\nconst styles = StyleSheet.create({\n  headerPanelViewStyle: {\n    width,\n    backgroundColor: '#ff0032',\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n});\n\nconst HeaderView = (props) => (\n    <View style={{backgroundColor: 'green',}}><Text style={{color: 'white'}}>Hello world</Text></View>\n  )\n  \n  const SlidingPanelView = (props) => (\n    <View style={{height: 200, width, backgroundColor: 'blue'}}><Text style={{color: 'white'}}>Hello world</Text></View>\n  )\n\nconst SlidingPanelIOS = (props) => (\n  <Animated.View style={props.panelPosition === 'bottom' ? {bottom: props.heightAnim, flex: 1, position: 'absolute',} : {top: props.heightAnim, flex: 1, position: 'absolute',}}>\n    <Animated.View\n            {...props.panResponder} style={{height: props.headerPanelHeight,}}>   \n      {props.headerView()}\n    </Animated.View>\n    <View style={props.panelPosition === 'bottom' ? {top: props.headerPanelHeight, left: 0, position: 'absolute',} : {bottom: props.headerPanelHeight, left: 0, position: 'absolute',}}>\n      {props.slidingPanelView()}\n    </View>\n  </Animated.View>\n);\n\nconst SlidingPanelAndroid = (props) => (\n    <Animated.View style={props.panelPosition === 'bottom' ? {bottom: props.heightAnim, flex: 1, position: 'absolute',} : {top: props.heightAnim, flex: 1, position: 'absolute',}}>\n    <Animated.View\n            {...props.panResponder} style={{height: props.headerPanelHeight,}}>   \n      {props.headerView()}\n    </Animated.View>\n    <Animated.View style={props.panelPosition === 'bottom' ? {top: props.headerPanelHeight, left: 0, position: 'absolute',} : {bottom: props.headerPanelHeight, left: 0, position: 'absolute',}}>\n      {props.slidingPanelView()}\n    </Animated.View>\n  </Animated.View>\n);\n\nexport default class SlidingPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      heightAnim: new Animated.Value(0),\n      panResponder: {},\n    };\n  }\n\n  componentWillMount() {\n    var a = 0;\n    this.state.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder : () => true,\n      onPanResponderGrant: (evt, gestureState) => {\n        a = 0;\n      },\n      onPanResponderMove: (event, gestureState) => {\n        if(this.props.allowDragging) {\n          if(a === 0) {\n            this.props.onDragStart(event, gestureState);\n          }\n          else {\n            this.props.onDrag(event, gestureState);\n          }\n          if(this.props.panelPosition === 'bottom') {\n            a = gestureState.dy * -1;\n          }\n          else {\n            a = gestureState.dy * 1;\n          }\n          if((Platform.OS === 'android' ? sliderPosition + a < height - (this.props.headerLayoutHeight + 25): sliderPosition + a < height - (this.props.headerLayoutHeight -2)) && sliderPosition + a > -2){\n            if(sliderPosition !== 0) {\n              this.state.heightAnim.setValue(sliderPosition + a)\n            }\n            else {\n              this.state.heightAnim.setValue(a)\n            }\n          }\n        }\n      },\n      onPanResponderRelease        : (e, gesture) => {\n        sliderPosition = sliderPosition + a\n        if(a !== 0) {\n          this.props.onDragStop(e, gesture)\n        }\n        \n        if(this.props.allowAnimation) {\n          if(a === 0 || (this.props.panelPosition === 'bottom' ? gesture.vy < -1 : gesture.vy > 1)) {\n            if(sliderPosition < height-this.props.headerLayoutHeight) {\n              sliderPosition = height-this.props.headerLayoutHeight\n              this.props.onAnimationStart();\n              Animated.timing(\n                this.state.heightAnim,\n                {\n                  toValue: Platform.OS === 'android' ? height-this.props.headerLayoutHeight - 25 : height-this.props.headerLayoutHeight,\n                  duration: this.props.AnimationSpeed,\n                }\n              ).start(() => this.props.onAnimationStop());\n            }\n            else {\n              sliderPosition = 0\n              this.props.onAnimationStart();\n              Animated.timing(\n                this.state.heightAnim,\n                {\n                  toValue: 0,\n                  duration: this.props.AnimationSpeed,\n                }\n              ).start(() => this.props.onAnimationStop()); \n            }\n          }\n          if(this.props.panelPosition === 'bottom' ? gesture.vy > 1 : gesture.vy < -1) {\n            sliderPosition = 0\n            this.props.onAnimationStart();\n            Animated.timing(\n              this.state.heightAnim,\n              {\n                toValue: 0,\n                duration: this.props.AnimationSpeed,\n              }\n            ).start(() => this.props.onAnimationStop());\n          }\n        }\n      },\n    });\n  }\n\n  onRequestClose() {\n    sliderPosition = 0\n    Animated.timing(\n      this.state.heightAnim,\n      {\n        toValue: 0,\n        duration: this.props.AnimationSpeed,\n      }\n    ).start();\n  }\n\n  onRequestStart() {\n    sliderPosition = height-this.props.headerLayoutHeight\n    Animated.timing(\n      this.state.heightAnim,\n      {\n        toValue: Platform.OS === 'android' ? height-this.props.headerLayoutHeight - 25 : height-this.props.headerLayoutHeight,\n        duration: this.props.AnimationSpeed,\n      }\n    ).start();\n  }\n\n  render() {\n    return (\n      <View style={this.props.panelPosition === 'bottom' ? {position: 'absolute', bottom: 0} : {position: 'absolute', top: 0}}>\n        {\n          Platform.OS === 'ios' && this.props.visible === true ?\n            <SlidingPanelIOS\n                panResponder = {this.state.panResponder.panHandlers}\n                panelPosition={this.props.panelPosition}\n                headerPanelHeight={this.props.headerLayoutHeight}\n                headerView = {() => this.props.headerLayout()}\n                heightAnim={this.state.heightAnim}\n                visible={this.props.visible}\n                slidingPanelView={() => this.props.slidingPanelLayout()}\n            /> : this.props.visible === true &&\n            <SlidingPanelAndroid\n                panResponder = {this.state.panResponder.panHandlers}\n                panelPosition={this.props.panelPosition}\n                headerPanelHeight={this.props.headerLayoutHeight}\n                headerView = {() => this.props.headerLayout()}\n                heightAnim={this.state.heightAnim}\n                visible={this.props.visible}\n                slidingPanelView={() => this.props.slidingPanelLayout()}\n            />\n        }\n      </View>\n    );\n  }\n}\n\nSlidingPanel.propTypes = {\n  headerLayoutHeight: PropTypes.number.isRequired,\n  headerLayout: PropTypes.func.isRequired,\n  slidingPanelLayout: PropTypes.func.isRequired,\n\n  AnimationSpeed: PropTypes.number,\n  slidingPanelLayoutHeight: PropTypes.number,\n  panelPosition: PropTypes.string,\n  visible: PropTypes.bool,\n  allowDragging: PropTypes.bool,\n  allowAnimation: PropTypes.bool,\n  onDragStart: (event, gestureState) => {},\n  onDragStop: (event, gestureState) => {},\n  onDrag: (event, gestureState) => {},\n  onAnimationStart: () => {},\n  onAnimationStop: () => {},\n};\n\nSlidingPanel.defaultProps = {\n  panelPosition: 'bottom',\n  headerLayoutHeight: 50,\n  headerLayout: () => {},\n  visible: true,\n  onDragStart: (event, gestureState) => {},\n  onDragStop: (event, gestureState) => {},\n  onDrag: (event, gestureState) => {},\n  onAnimationStart: () => {},\n  onAnimationStop: () => {},\n  slidingPanelLayout: () => {},\n  allowDragging: true,\n  allowAnimation: true,\n  slidingPanelLayoutHeight: 0,\n  AnimationSpeed: 1000,\n};"]},"metadata":{},"sourceType":"module"}