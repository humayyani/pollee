{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/robertheler/Desktop/Hack Reactor/pollee/components/screens/Ask.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Component, Fragment } from \"react\";\nimport { Container, Header, Content, Button, Form, Root, Item, Input, Thumbnail, Textarea, Label, Toast } from \"native-base\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\n\nvar Post = function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post(_ref) {\n    var _this;\n\n    var route = _ref.route,\n        navigation = _ref.navigation;\n\n    _classCallCheck(this, Post);\n\n    _this = _super.call(this);\n    _this.state = {\n      user: route.params.route.userData,\n      poll: {},\n      question: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\",\n      showToast: false,\n      anonymous: false\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.toggleSwitch = _this.toggleSwitch.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"toggleSwitch\",\n    value: function toggleSwitch() {\n      if (!this.state.anonymous) {\n        this.setState({\n          anonymous: true\n        });\n        Toast.show({\n          text: \"Anonymous mode\\nNo one will know you created this poll!\",\n          buttonText: \"Okay\",\n          position: \"bottom\",\n          duration: 2000\n        });\n      } else {\n        this.setState({\n          anonymous: false\n        });\n        Toast.show({\n          text: \"Your poll will be public!\",\n          buttonText: \"Okay\",\n          position: \"bottom\",\n          duration: 2000\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      if (this.state.question === \"\" || this.state.answer1 === \"\" || this.state.answer2 === \"\") {\n        Toast.show({\n          text: \"You must fill out:\\n   \\u2022 the question \\n   \\u2022 at least 2 answers\",\n          buttonText: \"Okay\",\n          position: \"bottom\",\n          duration: 3000\n        });\n      } else {\n        var poll = {\n          by: !this.state.anonymous ? this.state.user.id : \"1\",\n          question: this.state.question,\n          answers: [this.state.answer1, this.state.answer2]\n        };\n\n        if (this.state.answer3 !== \"\") {\n          poll.answers.push(this.state.answer3);\n        }\n\n        if (this.state.answer4 !== \"\") {\n          poll.answers.push(this.state.answer4);\n        }\n\n        this.postPoll(poll);\n      }\n    }\n  }, {\n    key: \"postPoll\",\n    value: function postPoll(poll) {\n      var _this2 = this;\n\n      fetch(\"http://3.221.234.184:3001/api/polls\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"post\",\n        body: JSON.stringify(poll)\n      }).then(function (response) {\n        return _this2.setState({\n          question: \"\",\n          answer1: \"\",\n          answer2: \"\",\n          answer3: \"\",\n          answer4: \"\"\n        }, Toast.show({\n          text: \"Post submitted!\",\n          buttonText: \"Okay\",\n          type: \"success\",\n          position: \"bottom\",\n          duration: 3000\n        }));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Root, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, React.createElement(Content, {\n        contentContainerStyle: styles.contentContainerOuter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, React.createElement(Content, {\n        contentContainerStyle: styles.contentContainerInner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, this.state.user ? React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: 40,\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContet: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, React.createElement(Thumbnail, {\n        source: {\n          uri: !this.state.anonymous ? \"\" + this.state.user.picture.data.url : \"https://adidasproducts.s3-us-west-1.amazonaws.com/images/anonymous.png\"\n        },\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 15,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"#202020\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 27\n        }\n      }, !this.state.anonymous ? \"\" + this.state.user.name : \"Anonynous\"))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 23\n        }\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Type your poll here (e.g. Am I pretty?)\",\n        placeholderTextColor: \"gray\",\n        value: this.state.question,\n        style: styles.question,\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            question: val\n          });\n        },\n        id: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }\n      }), React.createElement(Input, {\n        placeholder: \"  Answer 1\",\n        placeholderTextColor: \"#E9E9E9\",\n        value: this.state.answer1,\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer1: val\n          });\n        },\n        id: \"answer1\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 23\n        }\n      }), React.createElement(Input, {\n        placeholder: \"  Answer 2\",\n        placeholderTextColor: \"#E9E9E9\",\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        value: this.state.answer2,\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer2: val\n          });\n        },\n        id: \"answer2\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }\n      }), React.createElement(Input, {\n        placeholder: \"  Answer 3 (optional)\",\n        placeholderTextColor: \"#E9E9E9\",\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        value: this.state.answer3,\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer3: val\n          });\n        },\n        id: \"answer3\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }\n      }), React.createElement(Input, {\n        placeholder: \"  Answer 4 (optional)\",\n        placeholderTextColor: \"#E9E9E9\",\n        getRef: function getRef(ref) {\n          _this3.SearchInput = ref;\n        },\n        value: this.state.answer4,\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            answer4: val\n          });\n        },\n        id: \"answer4\",\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 23\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"space-between\",\n          justifyContent: \"center\",\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }, React.createElement(Switch, {\n        trackColor: {\n          false: \"white\",\n          true: \"#FCC101\"\n        },\n        ios_backgroundColor: \"#E7E7E7\",\n        onValueChange: this.toggleSwitch,\n        value: this.state.anonymous,\n        style: {\n          alignSelf: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }\n      }), React.createElement(MaterialCommunityIcons, {\n        name: \"guy-fawkes-mask\",\n        color: this.state.anonymous ? \"#FCC101\" : \"#D5D5D7\",\n        size: 36,\n        style: {\n          alignSelf: \"center\",\n          paddingLeft: 10,\n          shadowColor: \"#FCC101\",\n          shadowOffset: {\n            width: 0,\n            height: 0\n          },\n          shadowOpacity: this.state.anonymous ? 1 : 0,\n          shadowRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          alignSelf: \"center\",\n          color: \"#202020\"\n        },\n        onPress: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 23\n        }\n      }, \"Submit Poll\")), React.createElement(Text, {\n        style: {\n          marginBottom: 5,\n          marginHorizontal: 10,\n          textAlign: \"left\",\n          fontStyle: \"italic\",\n          fontSize: 12,\n          alignSelf: \"flex-start\",\n          color: \"gray\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, \" \", \"A public poll will be visible to all your Facebook friends!\"))))))));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport { Post as default };\nvar styles = StyleSheet.create({\n  contentContainerOuter: {\n    justifyContent: \"center\"\n  },\n  contentContainerInner: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5\n  },\n  outter: {\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    width: \"100%\",\n    paddingVertical: 10,\n    paddingHorizontal: 0,\n    margin: 3,\n    alignSelf: \"center\"\n  },\n  container: {\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    marginTop: 21,\n    marginBottom: 100,\n    paddingVertical: 10,\n    marginHorizontal: 20,\n    shadowColor: \"#d9d9d9\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 30\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#202020\",\n    marginBottom: 20,\n    borderBottomWidth: 1,\n    borderColor: \"#E9E9E9\",\n    padding: 0\n  },\n  answer: {\n    fontSize: 15,\n    color: \"#202020\",\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    height: 40,\n    width: \"100%\",\n    alignSelf: \"center\",\n    marginVertical: 3\n  },\n  button: {\n    borderRadius: 20,\n    height: 40,\n    paddingHorizontal: 15,\n    marginTop: 30,\n    marginBottom: 30,\n    alignSelf: \"center\",\n    backgroundColor: \"#FDC100\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/robertheler/Desktop/Hack Reactor/pollee/components/screens/Ask.js"],"names":["React","useState","Component","Fragment","Container","Header","Content","Button","Form","Root","Item","Input","Thumbnail","Textarea","Label","Toast","MaterialCommunityIcons","ScrollView","Post","route","navigation","state","user","params","userData","poll","question","answer1","answer2","answer3","answer4","showToast","anonymous","onSubmit","bind","toggleSwitch","setState","show","text","buttonText","position","duration","by","id","answers","push","postPoll","fetch","headers","Accept","method","body","JSON","stringify","then","response","type","catch","error","console","log","styles","contentContainerOuter","container","contentContainerInner","flex","flexDirection","justifyContent","alignItems","height","marginBottom","justifyContet","uri","picture","data","url","width","borderRadius","marginRight","color","name","ref","SearchInput","val","answer","marginTop","false","true","alignSelf","paddingLeft","shadowColor","shadowOffset","shadowOpacity","shadowRadius","button","fontSize","marginHorizontal","textAlign","fontStyle","StyleSheet","create","paddingHorizontal","outter","borderWidth","borderColor","paddingVertical","margin","backgroundColor","elevation","fontWeight","borderBottomWidth","padding","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, Component, Fragment } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  Button,\n  Form,\n  Root,\n  Item,\n  Input,\n  Thumbnail,\n  Textarea,\n  Label,\n  Toast\n} from \"native-base\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { StyleSheet, View, Text, TouchableOpacity, Switch } from \"react-native\";\n\nexport default class Post extends Component {\n  constructor({ route, navigation }) {\n    super();\n    this.state = {\n      user: route.params.route.userData,\n      poll: {},\n      question: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\",\n      showToast: false,\n      anonymous: false\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSwitch = this.toggleSwitch.bind(this);\n  }\n\n  toggleSwitch() {\n    if (!this.state.anonymous) {\n      this.setState({ anonymous: true });\n      Toast.show({\n        text: `Anonymous mode\\nNo one will know you created this poll!`,\n        buttonText: \"Okay\",\n        position: \"bottom\",\n        duration: 2000\n      });\n    } else {\n      this.setState({ anonymous: false });\n      Toast.show({\n        text: `Your poll will be public!`,\n        buttonText: \"Okay\",\n        position: \"bottom\",\n        duration: 2000\n      });\n    }\n  }\n\n  onSubmit() {\n    if (\n      this.state.question === \"\" ||\n      this.state.answer1 === \"\" ||\n      this.state.answer2 === \"\"\n    ) {\n      // Works on both Android and iOS\n      Toast.show({\n        text: `You must fill out:\\n   • the question \\n   • at least 2 answers`,\n        buttonText: \"Okay\",\n        position: \"bottom\",\n        duration: 3000\n      });\n    } else {\n      let poll = {\n        by: !this.state.anonymous ? this.state.user.id : \"1\",\n        question: this.state.question,\n        answers: [this.state.answer1, this.state.answer2]\n      };\n      if (this.state.answer3 !== \"\") {\n        poll.answers.push(this.state.answer3);\n      }\n      if (this.state.answer4 !== \"\") {\n        poll.answers.push(this.state.answer4);\n      }\n      this.postPoll(poll);\n    }\n  }\n\n  postPoll(poll) {\n    fetch(\"http://3.221.234.184:3001/api/polls\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(poll)\n    })\n      .then(response =>\n        //alert('Poll was submitted! Check the feed to see responses!')\n        this.setState(\n          {\n            question: \"\",\n            answer1: \"\",\n            answer2: \"\",\n            answer3: \"\",\n            answer4: \"\"\n          },\n\n          Toast.show({\n            text: \"Post submitted!\",\n            buttonText: \"Okay\",\n            type: \"success\",\n            position: \"bottom\",\n            duration: 3000\n          })\n        )\n      )\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <Root>\n        <Container>\n          <Content>\n            <ScrollView>\n              <Content contentContainerStyle={styles.contentContainerOuter}>\n                <View style={styles.container}>\n                  <Content contentContainerStyle={styles.contentContainerInner}>\n                    {this.state.user ? (\n                      <View\n                        style={{\n                          flex: 1,\n                          flexDirection: \"row\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          height: 40,\n                          marginBottom: 0\n                        }}\n                      >\n                        <View\n                          style={{\n                            flex: 1,\n                            flexDirection: \"row\",\n                            justifyContet: \"center\",\n                            alignItems: \"center\"\n                          }}\n                        >\n                          <Thumbnail\n                            source={{\n                              uri: !this.state.anonymous\n                                ? `${this.state.user.picture.data.url}`\n                                : \"https://adidasproducts.s3-us-west-1.amazonaws.com/images/anonymous.png\"\n                            }}\n                            style={{\n                              width: 30,\n                              height: 30,\n                              borderRadius: 15,\n                              marginRight: 10\n                            }}\n                          />\n                          <Text style={{ color: \"#202020\" }}>\n                            {!this.state.anonymous\n                              ? `${this.state.user.name}`\n                              : \"Anonynous\"}\n                          </Text>\n                        </View>\n                      </View>\n                    ) : (\n                      <View></View>\n                    )}\n                    <Form>\n                      <Input\n                        placeholder=\"Type your poll here (e.g. Am I pretty?)\"\n                        placeholderTextColor=\"gray\"\n                        value={this.state.question}\n                        style={styles.question}\n                        getRef={ref => {\n                          this.SearchInput = ref;\n                        }}\n                        onChangeText={val => this.setState({ question: val })}\n                        id=\"question\"\n                      />\n\n                      <Input\n                        placeholder=\"  Answer 1\"\n                        placeholderTextColor=\"#E9E9E9\"\n                        value={this.state.answer1}\n                        getRef={ref => {\n                          this.SearchInput = ref;\n                        }}\n                        onChangeText={val => this.setState({ answer1: val })}\n                        id=\"answer1\"\n                        style={styles.answer}\n                      />\n\n                      <Input\n                        placeholder=\"  Answer 2\"\n                        placeholderTextColor=\"#E9E9E9\"\n                        getRef={ref => {\n                          this.SearchInput = ref;\n                        }}\n                        value={this.state.answer2}\n                        onChangeText={val => this.setState({ answer2: val })}\n                        id=\"answer2\"\n                        style={styles.answer}\n                      />\n\n                      <Input\n                        placeholder=\"  Answer 3 (optional)\"\n                        placeholderTextColor=\"#E9E9E9\"\n                        getRef={ref => {\n                          this.SearchInput = ref;\n                        }}\n                        value={this.state.answer3}\n                        onChangeText={val => this.setState({ answer3: val })}\n                        id=\"answer3\"\n                        style={styles.answer}\n                      />\n\n                      <Input\n                        placeholder=\"  Answer 4 (optional)\"\n                        placeholderTextColor=\"#E9E9E9\"\n                        getRef={ref => {\n                          this.SearchInput = ref;\n                        }}\n                        value={this.state.answer4}\n                        onChangeText={val => this.setState({ answer4: val })}\n                        id=\"answer4\"\n                        style={styles.answer}\n                      />\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"space-between\",\n                          justifyContent: \"center\",\n                          marginTop: 30\n                        }}\n                      >\n                        <Switch\n                          trackColor={{ false: \"white\", true: \"#FCC101\" }}\n                          // thumbColor={this.state.anonymous ? \"#f5dd4b\" : \"#f4f3f4\"}\n                          ios_backgroundColor=\"#E7E7E7\"\n                          onValueChange={this.toggleSwitch}\n                          value={this.state.anonymous}\n                          style={{ alignSelf: \"center\" }}\n                        />\n                        <MaterialCommunityIcons\n                          name={\"guy-fawkes-mask\"}\n                          color={this.state.anonymous ? \"#FCC101\" : \"#D5D5D7\"}\n                          size={36}\n                          style={{\n                            alignSelf: \"center\",\n                            paddingLeft: 10,\n                            shadowColor: \"#FCC101\",\n                            shadowOffset: {\n                              width: 0,\n                              height: 0\n                            },\n                            shadowOpacity: this.state.anonymous ? 1 : 0,\n                            shadowRadius: 5\n                          }}\n                        />\n                      </View>\n                    </Form>\n\n                    <TouchableOpacity style={styles.button}>\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          alignSelf: \"center\",\n                          color: \"#202020\"\n                        }}\n                        onPress={this.onSubmit}\n                      >\n                        Submit Poll\n                      </Text>\n                    </TouchableOpacity>\n                    <Text\n                      style={{\n                        marginBottom: 5,\n                        marginHorizontal: 10,\n                        textAlign: \"left\",\n                        fontStyle: \"italic\",\n                        fontSize: 12,\n                        alignSelf: \"flex-start\",\n                        color: \"gray\"\n                      }}\n                    >\n                      {\" \"}\n                      {`A public poll will be visible to all your Facebook friends!`}\n                    </Text>\n                  </Content>\n                </View>\n              </Content>\n            </ScrollView>\n          </Content>\n        </Container>\n      </Root>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  contentContainerOuter: {\n    justifyContent: \"center\"\n  },\n  contentContainerInner: {\n    justifyContent: \"center\",\n    paddingHorizontal: 5\n  },\n  outter: {\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    width: \"100%\",\n    paddingVertical: 10,\n    paddingHorizontal: 0,\n    margin: 3,\n    alignSelf: \"center\"\n  },\n  container: {\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    marginTop: 21,\n    marginBottom: 100,\n    paddingVertical: 10,\n    marginHorizontal: 20,\n    shadowColor: \"#d9d9d9\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 30\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#202020\",\n    marginBottom: 20,\n    borderBottomWidth: 1,\n    borderColor: \"#E9E9E9\",\n    padding: 0\n  },\n  answer: {\n    fontSize: 15,\n    color: \"#202020\",\n    borderWidth: 1,\n    borderColor: \"#E9E9E9\",\n    borderRadius: 20,\n    height: 40,\n    width: \"100%\",\n    alignSelf: \"center\",\n    marginVertical: 3\n  },\n  button: {\n    borderRadius: 20,\n    height: 40,\n\n    paddingHorizontal: 15,\n    marginTop: 30,\n    marginBottom: 30,\n    alignSelf: \"center\",\n    backgroundColor: \"#FDC100\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}